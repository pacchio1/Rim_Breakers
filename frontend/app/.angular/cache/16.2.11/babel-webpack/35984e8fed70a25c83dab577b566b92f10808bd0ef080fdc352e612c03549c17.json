{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(themeService, router) {\n    this.themeService = themeService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n  }\n  ngOnInit() {\n    this.simulateAPIResponseLogin();\n  }\n  toggleTheme() {\n    this.themeService.toggleTheme();\n  }\n  simulateAPIResponseLogin() {\n    // Assegnazione dei valori della risposta simulata\n    const simulationLogin = {\n      email: 'giulia@gmail.com',\n      password: '1234'\n    };\n    this.loginData = simulationLogin;\n    console.log(this.loginData.password);\n  }\n  onSubmit() {\n    // Logica per gestire la sottomissione del modulo\n    this.checkCredentials();\n  }\n  checkCredentials() {\n    // Logica per verificare le credenziali\n    // Ad esempio, controlla se le credenziali esistono in un oggetto predefinito\n    const users = [{\n      email: 'giulia@gmail.com',\n      password: '1234'\n    }\n    // Aggiungi altri utenti se necessario\n    ];\n\n    const foundUser = users.find(user => user.email === this.email && user.password === this.password);\n    if (foundUser) {\n      console.log('Credenziali corrette');\n      this.router.navigate(['/profile']);\n    } else {\n      console.error('Credenziali errate');\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","themeService","router","email","password","ngOnInit","simulateAPIResponseLogin","toggleTheme","simulationLogin","loginData","console","log","onSubmit","checkCredentials","users","foundUser","find","user","navigate","error","__decorate","selector","templateUrl"],"sources":["/Users/simotta/Desktop/ITS/RimBreakers/Rim_Breakers/frontend/app/src/app/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ThemeService } from '../_service/dark-mode.service';\nimport { LoginUser } from '../_model/login.model';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\n\nexport class LoginComponent {\n\n  loginData!: LoginUser;\n\n  email: string = '';\n  password: string = '';\n\n  constructor(public themeService: ThemeService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.simulateAPIResponseLogin();\n  }\n\n  toggleTheme(): void {\n    this.themeService.toggleTheme();\n  }\n\n  simulateAPIResponseLogin(): void {\n    // Assegnazione dei valori della risposta simulata\n    const simulationLogin: LoginUser = {\n      email: 'giulia@gmail.com',\n      password: '1234'\n    }\n    this.loginData = simulationLogin;\n    console.log(this.loginData.password)\n  }\n\n  onSubmit() {\n    // Logica per gestire la sottomissione del modulo\n    this.checkCredentials();\n  }\n\n  checkCredentials() {\n    // Logica per verificare le credenziali\n    // Ad esempio, controlla se le credenziali esistono in un oggetto predefinito\n    const users = [\n      { email: 'giulia@gmail.com', password: '1234' },\n      // Aggiungi altri utenti se necessario\n    ];\n\n    const foundUser = users.find(user => user.email === this.email && user.password === this.password);\n\n    if (foundUser) {\n      console.log('Credenziali corrette');\n      this.router.navigate(['/profile']);\n    } else {\n      console.error('Credenziali errate');\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YAAmBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAH7D,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;EAEmD;EAExEC,QAAQA,CAAA;IACN,IAAI,CAACC,wBAAwB,EAAE;EACjC;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACN,YAAY,CAACM,WAAW,EAAE;EACjC;EAEAD,wBAAwBA,CAAA;IACtB;IACA,MAAME,eAAe,GAAc;MACjCL,KAAK,EAAE,kBAAkB;MACzBC,QAAQ,EAAE;KACX;IACD,IAAI,CAACK,SAAS,GAAGD,eAAe;IAChCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAACL,QAAQ,CAAC;EACtC;EAEAQ,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgBA,CAAA;IACd;IACA;IACA,MAAMC,KAAK,GAAG,CACZ;MAAEX,KAAK,EAAE,kBAAkB;MAAEC,QAAQ,EAAE;IAAM;IAC7C;IAAA,CACD;;IAED,MAAMW,SAAS,GAAGD,KAAK,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACd,KAAK,KAAK,IAAI,CAACA,KAAK,IAAIc,IAAI,CAACb,QAAQ,KAAK,IAAI,CAACA,QAAQ,CAAC;IAElG,IAAIW,SAAS,EAAE;MACbL,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC,IAAI,CAACT,MAAM,CAACgB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;KACnC,MAAM;MACLR,OAAO,CAACS,KAAK,CAAC,oBAAoB,CAAC;;EAEvC;CAED;AAlDYpB,cAAc,GAAAqB,UAAA,EAL1BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE;CACd,CAAC,C,EAEWvB,cAAc,CAkD1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}