{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.isDarkMode = false;\n  }\n  toggleTheme() {\n    this.isDarkMode = !this.isDarkMode;\n    localStorage.setItem('isDarkMode', this.isDarkMode.toString());\n    console.log(localStorage.key);\n  }\n  static #_ = this.ɵfac = function ThemeService_Factory(t) {\n    return new (t || ThemeService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThemeService,\n    factory: ThemeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ThemeService","constructor","isDarkMode","toggleTheme","localStorage","setItem","toString","console","log","key","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/simotta/Desktop/ITS/RimBreakers/Rim_Breakers/frontend/app/src/app/service/dark-mode.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n    isDarkMode: boolean = false;\n\n    toggleTheme(): void {\n        this.isDarkMode = !this.isDarkMode;\n        localStorage.setItem('isDarkMode', this.isDarkMode.toString());\n        console.log(localStorage.key)\n    }\n\n}"],"mappings":";AAKA,OAAM,MAAOA,YAAY;EAHzBC,YAAA;IAKI,KAAAC,UAAU,GAAY,KAAK;;EAE3BC,WAAWA,CAAA;IACP,IAAI,CAACD,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;IAClCE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,IAAI,CAACH,UAAU,CAACI,QAAQ,EAAE,CAAC;IAC9DC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAACK,GAAG,CAAC;EACjC;EAAC,QAAAC,CAAA,G;qBARQV,YAAY;EAAA;EAAA,QAAAW,EAAA,G;WAAZX,YAAY;IAAAY,OAAA,EAAZZ,YAAY,CAAAa,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}