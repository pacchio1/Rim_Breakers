{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.isDarkMode = false;\n  }\n  toggleTheme() {\n    this.isDarkMode = !this.isDarkMode;\n  }\n  static #_ = this.ɵfac = function ThemeService_Factory(t) {\n    return new (t || ThemeService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThemeService,\n    factory: ThemeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ThemeService","constructor","isDarkMode","toggleTheme","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/simotta/Desktop/ITS/RimBreakers/Rim_Breakers/frontend/app/src/app/_service/dark-mode.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class ThemeService {\n\n  isDarkMode: boolean = false;\n\n  toggleTheme(): void {\n    this.isDarkMode = !this.isDarkMode;\n  }\n  \n}\n"],"mappings":";AAMA,OAAM,MAAOA,YAAY;EAJzBC,YAAA;IAME,KAAAC,UAAU,GAAY,KAAK;;EAE3BC,WAAWA,CAAA;IACT,IAAI,CAACD,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;EAAC,QAAAE,CAAA,G;qBANUJ,YAAY;EAAA;EAAA,QAAAK,EAAA,G;WAAZL,YAAY;IAAAM,OAAA,EAAZN,YAAY,CAAAO,IAAA;IAAAC,UAAA,EAHX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}