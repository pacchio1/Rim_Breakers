{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// import { SunsetResults } from '../model/sunset.model';\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  /**\n   * API RICERCA DATI ALBA & TRAMONTO\n   *\n   * @param lat, @param long\n   * @returns richiesta Api\n   */\n  searchMatch() {\n    return this.http.get('http://localhost:8080/player/all').pipe(map(response => {\n      return response.results;\n    }));\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","ApiService","constructor","http","searchMatch","get","pipe","response","results","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/simotta/Desktop/ITS/RimBreakers/Rim_Breakers/frontend/app/src/app/_service/api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs';\n\n// import { SunsetResults } from '../model/sunset.model';\n\n@Injectable({\n\t providedIn: 'root',\n})\n\nexport class ApiService {\n    constructor(private http: HttpClient) {}\n\n    /**\n     * API RICERCA DATI ALBA & TRAMONTO\n     * \n     * @param lat, @param long \n     * @returns richiesta Api \n     */\n    searchMatch() {\n        return this.http.get('http://localhost:8080/player/all').pipe(map((response: any) => {\n            return response.results \n        }))\n    }\n\n\n}"],"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;;;AAE1B;AAMA,OAAM,MAAOC,UAAU;EACnBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC;;;;;;EAMAC,WAAWA,CAAA;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAACN,GAAG,CAAEO,QAAa,IAAI;MAChF,OAAOA,QAAQ,CAACC,OAAO;IAC3B,CAAC,CAAC,CAAC;EACP;EAAC,QAAAC,CAAA,G;qBAbQR,UAAU,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVb,UAAU;IAAAc,OAAA,EAAVd,UAAU,CAAAe,IAAA;IAAAC,UAAA,EAHT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}