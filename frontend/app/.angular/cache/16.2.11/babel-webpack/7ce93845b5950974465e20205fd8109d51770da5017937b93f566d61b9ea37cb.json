{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_service/dark-mode.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(themeService, router) {\n    this.themeService = themeService;\n    this.router = router;\n    // loginData!: LoginUser;\n    this.users = [];\n    this.email = '';\n    this.password = '';\n  }\n  ngOnInit() {\n    this.simulateAPIResponseLogin();\n  }\n  toggleTheme() {\n    this.themeService.toggleTheme();\n  }\n  simulateAPIResponseLogin() {\n    // Assegnazione dei valori della risposta simulata\n    const simulationLogin = {\n      email: 'giulia@gmail.com',\n      password: '1234'\n    };\n    // this.loginData = simulationLogin;\n    this.users = [simulationLogin];\n    // console.log(this.loginData.password)\n  }\n\n  onSubmit() {\n    // Logica per gestire la sottomissione del modulo\n    this.checkCredentials();\n  }\n  checkCredentials() {\n    const foundUser = this.users.find(user => user.email === this.email && user.password === this.password);\n    if (foundUser) {\n      console.log('Credenziali corrette');\n      this.router.navigate(['/profile']);\n    } else {\n      console.error('Credenziali errate');\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ThemeService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 33,\n    vars: 2,\n    consts: [[1, \"mt-navbar\", \"d-flex\", \"flex-column\", \"align-items-center\"], [1, \"logo\", \"mt-4\"], [\"src\", \"../../assets/imgX/logo-broom.png\", \"alt\", \"\", 1, \"img-fluid\"], [1, \"mt-3\"], [1, \"small\"], [1, \"mt-2\", \"m-5\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"inputEmail\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"inputEmail\", \"placeholder\", \"Scrivi la tua email\", \"name\", \"email\", 1, \"form-control\", \"rounded-4\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"*****\", \"name\", \"password\", 1, \"form-control\", \"rounded-4\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"rememberMe\", 1, \"form-check-input\"], [\"for\", \"rememberMe\", 1, \"form-check-label\"], [\"href\", \"#\", 1, \"float-end\"], [\"type\", \"submit\", 1, \"btn\", \"btn-match-input\", \"rounded-4\", \"mb-3\"], [\"type\", \"submit\", \"routerLink\", \"/profile\", 1, \"btn\", \"btn-google-access\", \"rounded-4\", \"mb-3\"], [\"src\", \"../../assets/imgX/google-logo.png\", \"alt\", \"\", 1, \"google-logo\", \"img-fluid\", \"me-2\"], [1, \"iscrizione\", \"text-center\", \"mt-3\"], [\"href\", \"#\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h2\", 3);\n        i0.ɵɵtext(4, \"Accedi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\", 4);\n        i0.ɵɵtext(6, \"Per possiedi un account effettua l'accesso\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"section\", 5)(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 12);\n        i0.ɵɵelement(18, \"input\", 13);\n        i0.ɵɵelementStart(19, \"label\", 14);\n        i0.ɵɵtext(20, \"Ricordami\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"a\", 15);\n        i0.ɵɵtext(22, \"Password dimenticata\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"button\", 16);\n        i0.ɵɵtext(24, \" Accedi \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 17);\n        i0.ɵɵelement(26, \"img\", 18);\n        i0.ɵɵtext(27, \" Accedi con google \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 19)(29, \"p\");\n        i0.ɵɵtext(30, \"Non hai un account? \");\n        i0.ɵɵelementStart(31, \"a\", 20);\n        i0.ɵɵtext(32, \"Iscriviti\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","themeService","router","users","email","password","ngOnInit","simulateAPIResponseLogin","toggleTheme","simulationLogin","onSubmit","checkCredentials","foundUser","find","user","console","log","navigate","error","_","i0","ɵɵdirectiveInject","i1","ThemeService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","LoginComponent_Template_form_ngSubmit_8_listener","LoginComponent_Template_input_ngModelChange_12_listener","$event","LoginComponent_Template_input_ngModelChange_16_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/simotta/Desktop/ITS/RimBreakers/Rim_Breakers/frontend/app/src/app/login/login.component.ts","/Users/simotta/Desktop/ITS/RimBreakers/Rim_Breakers/frontend/app/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ThemeService } from '../_service/dark-mode.service';\nimport { LoginUser } from '../_model/login.model';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\n\nexport class LoginComponent {\n\n  // loginData!: LoginUser;\n  users: LoginUser[] = [];\n\n  email: string = '';\n  password: string = '';\n\n  constructor(public themeService: ThemeService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.simulateAPIResponseLogin();\n  }\n\n  toggleTheme(): void {\n    this.themeService.toggleTheme();\n  }\n\n  simulateAPIResponseLogin(): void {\n    // Assegnazione dei valori della risposta simulata\n    const simulationLogin: LoginUser = {\n      email: 'giulia@gmail.com',\n      password: '1234'\n    }\n    // this.loginData = simulationLogin;\n    this.users = [simulationLogin];\n    // console.log(this.loginData.password)\n  }\n\n  onSubmit() {\n    // Logica per gestire la sottomissione del modulo\n    this.checkCredentials();\n  }\n\n  checkCredentials() {\n\n    const foundUser = this.users.find(user => user.email === this.email && user.password === this.password);\n\n    if (foundUser) {\n      console.log('Credenziali corrette');\n      this.router.navigate(['/profile']);\n    } else {\n      console.error('Credenziali errate');\n    }\n    \n  }\n\n}\n","<section class=\"mt-navbar d-flex flex-column align-items-center\">\n  <div class=\"logo mt-4\">\n    <img src=\"../../assets/imgX/logo-broom.png\" alt=\"\" class=\"img-fluid\" />\n  </div>\n  <h2 class=\"mt-3\">Accedi</h2>\n  <p class=\"small\">Per possiedi un account effettua l'accesso</p>\n</section>\n\n<section class=\"mt-2 m-5\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"mb-3\">\n      <label for=\"inputEmail\" class=\"form-label\">Email</label>\n      <input\n        type=\"email\"\n        class=\"form-control rounded-4\"\n        id=\"inputEmail\"\n        placeholder=\"Scrivi la tua email\"\n        [(ngModel)]=\"email\" name=\"email\"/>\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"inputPassword\" class=\"form-label\">Password</label>\n      <input\n        type=\"password\"\n        class=\"form-control rounded-4\"\n        id=\"inputPassword\"\n        placeholder=\"*****\"\n        [(ngModel)]=\"password\" name=\"password\"/>\n    </div>\n\n    <div class=\"mb-3 form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberMe\" />\n      <label class=\"form-check-label\" for=\"rememberMe\">Ricordami</label>\n      <a href=\"#\" class=\"float-end\">Password dimenticata</a>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-match-input rounded-4 mb-3\">\n      Accedi\n    </button>\n    <button type=\"submit\" class=\"btn btn-google-access rounded-4 mb-3\" routerLink=\"/profile\">\n      <img\n        src=\"../../assets/imgX/google-logo.png\"\n        alt=\"\"\n        class=\"google-logo img-fluid me-2\"\n      />\n      Accedi con google\n    </button>\n  </form>\n  <div class=\"iscrizione text-center mt-3\">\n    <p>Non hai un account? <a href=\"#\">Iscriviti</a></p>\n  </div>\n</section>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}