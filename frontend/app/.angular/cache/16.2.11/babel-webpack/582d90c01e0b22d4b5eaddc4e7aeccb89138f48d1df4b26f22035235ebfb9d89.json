{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.isDarkMode = false;\n    this.storedValue = '';\n    this.parsedValue = false;\n  }\n  toggleTheme() {\n    this.isDarkMode = !this.isDarkMode;\n    localStorage.setItem('darkMode', this.isDarkMode.toString());\n  }\n  themeSettled() {\n    this.storedValue = localStorage.getItem('darkMode');\n    console.log(this.storedValue);\n    if (this.storedValue) {\n      this.parsedValue = JSON.parse(this.storedValue);\n      console.log(this.parsedValue);\n      if (this.parsedValue) {\n        console.log(this.isDarkMode);\n        this.isDarkMode = this.parsedValue;\n      }\n    }\n    return this.isDarkMode;\n  }\n  static #_ = this.ɵfac = function ThemeService_Factory(t) {\n    return new (t || ThemeService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThemeService,\n    factory: ThemeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ThemeService","constructor","isDarkMode","storedValue","parsedValue","toggleTheme","localStorage","setItem","toString","themeSettled","getItem","console","log","JSON","parse","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/simotta/Desktop/ITS/RimBreakers/Rim_Breakers/frontend/app/src/app/_service/dark-mode.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class ThemeService {\n\n  isDarkMode: boolean = false;\n  storedValue: string | null = ''\n  parsedValue: boolean = false;\n\n  toggleTheme(): void {\n    this.isDarkMode = !this.isDarkMode;\n    localStorage.setItem('darkMode', this.isDarkMode.toString())\n  }\n\n  themeSettled(): boolean {\n    this.storedValue = localStorage.getItem('darkMode')\n    console.log(this.storedValue)\n    if(this.storedValue) {\n      this.parsedValue = JSON.parse(this.storedValue);\n      console.log(this.parsedValue)\n\n      if(this.parsedValue) {\n        console.log(this.isDarkMode)\n        this.isDarkMode = this.parsedValue;          \n      }           \n\n    }\n\n    return this.isDarkMode\n      \n  }\n  \n}\n"],"mappings":";AAMA,OAAM,MAAOA,YAAY;EAJzBC,YAAA;IAME,KAAAC,UAAU,GAAY,KAAK;IAC3B,KAAAC,WAAW,GAAkB,EAAE;IAC/B,KAAAC,WAAW,GAAY,KAAK;;EAE5BC,WAAWA,CAAA;IACT,IAAI,CAACH,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;IAClCI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAACL,UAAU,CAACM,QAAQ,EAAE,CAAC;EAC9D;EAEAC,YAAYA,CAAA;IACV,IAAI,CAACN,WAAW,GAAGG,YAAY,CAACI,OAAO,CAAC,UAAU,CAAC;IACnDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,WAAW,CAAC;IAC7B,IAAG,IAAI,CAACA,WAAW,EAAE;MACnB,IAAI,CAACC,WAAW,GAAGS,IAAI,CAACC,KAAK,CAAC,IAAI,CAACX,WAAW,CAAC;MAC/CQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,WAAW,CAAC;MAE7B,IAAG,IAAI,CAACA,WAAW,EAAE;QACnBO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,UAAU,CAAC;QAC5B,IAAI,CAACA,UAAU,GAAG,IAAI,CAACE,WAAW;;;IAKtC,OAAO,IAAI,CAACF,UAAU;EAExB;EAAC,QAAAa,CAAA,G;qBA3BUf,YAAY;EAAA;EAAA,QAAAgB,EAAA,G;WAAZhB,YAAY;IAAAiB,OAAA,EAAZjB,YAAY,CAAAkB,IAAA;IAAAC,UAAA,EAHX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}