{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_service/dark-mode.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 21);\n    i0.ɵɵtext(2, \" Accedi \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(themeService) {\n    this.themeService = themeService;\n    this.inputEmail = new FormControl('c');\n    this.inputPassword = new FormControl('');\n  }\n  ngOnInit() {\n    this.simulateAPIResponseLogin();\n    this.onSubmit();\n  }\n  toggleTheme() {\n    this.themeService.toggleTheme();\n  }\n  simulateAPIResponseLogin() {\n    // Assegnazione dei valori della risposta simulata\n    const simulationLogin = {\n      email: 'giulia@gmail.com',\n      password: '1234'\n    };\n    this.loginData = simulationLogin;\n    console.log(this.loginData.password);\n  }\n  onSubmit() {\n    let newEmail = this.inputEmail.value;\n    console.log(newEmail);\n    this.inputEmail.setValue(newEmail);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ThemeService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 32,\n    vars: 3,\n    consts: [[1, \"mt-navbar\", \"d-flex\", \"flex-column\", \"align-items-center\"], [1, \"logo\", \"mt-4\"], [\"src\", \"../../assets/imgX/logo-broom.png\", \"alt\", \"\", 1, \"img-fluid\"], [1, \"mt-3\"], [1, \"small\"], [1, \"mt-2\", \"m-5\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"inputEmail\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"inputEmail\", \"placeholder\", \"Scrivi la tua email\", 1, \"form-control\", \"rounded-4\", 3, \"formControl\"], [\"for\", \"inputPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"*****\", 1, \"form-control\", \"rounded-4\", 3, \"formControl\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"rememberMe\", 1, \"form-check-input\"], [\"for\", \"rememberMe\", 1, \"form-check-label\"], [\"href\", \"#\", 1, \"float-end\"], [4, \"ngIf\"], [\"type\", \"submit\", \"routerLink\", \"/profile\", 1, \"btn\", \"btn-google-access\", \"rounded-4\", \"mb-3\"], [\"src\", \"../../assets/imgX/google-logo.png\", \"alt\", \"\", 1, \"google-logo\", \"img-fluid\", \"me-2\"], [1, \"iscrizione\", \"text-center\", \"mt-3\"], [\"href\", \"#\"], [\"type\", \"submit\", \"routerLink\", \"/profile\", 1, \"btn\", \"btn-match-input\", \"rounded-4\", \"mb-3\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"Iscriviti\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\", 4);\n        i0.ɵɵtext(6, \"Per poter avere un account esegui l'accesso\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"section\", 5)(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 12);\n        i0.ɵɵelement(18, \"input\", 13);\n        i0.ɵɵelementStart(19, \"label\", 14);\n        i0.ɵɵtext(20, \"Ricordami\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"a\", 15);\n        i0.ɵɵtext(22, \"Password dimenticata\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(23, LoginComponent_ng_container_23_Template, 3, 0, \"ng-container\", 16);\n        i0.ɵɵelementStart(24, \"button\", 17);\n        i0.ɵɵelement(25, \"img\", 18);\n        i0.ɵɵtext(26, \" Accedi con google \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 19)(28, \"p\");\n        i0.ɵɵtext(29, \"Non hai un account? \");\n        i0.ɵɵelementStart(30, \"a\", 20);\n        i0.ɵɵtext(31, \"Iscriviti\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formControl\", ctx.inputEmail);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.inputPassword);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.inputEmail.value === ctx.simulationLogin.email);\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormControlDirective],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["FormControl","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","LoginComponent","constructor","themeService","inputEmail","inputPassword","ngOnInit","simulateAPIResponseLogin","onSubmit","toggleTheme","simulationLogin","email","password","loginData","console","log","newEmail","value","setValue","_","ɵɵdirectiveInject","i1","ThemeService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_8_listener","ɵɵtemplate","LoginComponent_ng_container_23_Template","ɵɵadvance","ɵɵproperty"],"sources":["/Users/simotta/Desktop/ITS/RimBreakers/Rim_Breakers/frontend/app/src/app/login/login.component.ts","/Users/simotta/Desktop/ITS/RimBreakers/Rim_Breakers/frontend/app/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ThemeService } from '../_service/dark-mode.service';\nimport { LoginUser } from '../_model/login.model';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\n\nexport class LoginComponent {\n\n  loginData!: LoginUser;\n\n  inputEmail = new FormControl('c');\n  inputPassword = new FormControl('');\n\n  constructor(public themeService: ThemeService) {}\n\n  ngOnInit(): void {\n    this.simulateAPIResponseLogin();\n    this.onSubmit();\n  }\n\n  toggleTheme(): void {\n    this.themeService.toggleTheme();\n  }\n\n  simulateAPIResponseLogin(): void {\n    // Assegnazione dei valori della risposta simulata\n    const simulationLogin: LoginUser = {\n      email: 'giulia@gmail.com',\n      password: '1234'\n    }\n    this.loginData = simulationLogin;\n    console.log(this.loginData.password)\n  }\n\n  onSubmit() {\n    let newEmail = this.inputEmail.value\n    console.log(newEmail)\n    this.inputEmail.setValue(newEmail);\n  }\n\n}\n","<section class=\"mt-navbar d-flex flex-column align-items-center\">\n  <div class=\"logo mt-4\">\n    <img src=\"../../assets/imgX/logo-broom.png\" alt=\"\" class=\"img-fluid\" />\n  </div>\n  <h1 class=\"mt-3\">Iscriviti</h1>\n  <p class=\"small\">Per poter avere un account esegui l'accesso</p>\n</section>\n\n<section class=\"mt-2 m-5\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"mb-3\">\n      <label for=\"inputEmail\" class=\"form-label\">Email</label>\n      <input\n        type=\"email\"\n        class=\"form-control rounded-4\"\n        id=\"inputEmail\"\n        placeholder=\"Scrivi la tua email\"\n        [formControl]=\"inputEmail\"\n      />\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"inputPassword\" class=\"form-label\">Password</label>\n      <input\n        type=\"password\"\n        class=\"form-control rounded-4\"\n        id=\"inputPassword\"\n        placeholder=\"*****\"\n        [formControl]=\"inputPassword\"\n      />\n    </div>\n\n    <div class=\"mb-3 form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberMe\" />\n      <label class=\"form-check-label\" for=\"rememberMe\">Ricordami</label>\n      <a href=\"#\" class=\"float-end\">Password dimenticata</a>\n    </div>\n\n    <ng-container *ngIf=\"inputEmail.value === simulationLogin.email\">\n    <button type=\"submit\" class=\"btn btn-match-input rounded-4 mb-3\" routerLink=\"/profile\">\n      Accedi\n    </button>\n    </ng-container>\n    <button type=\"submit\" class=\"btn btn-google-access rounded-4 mb-3\" routerLink=\"/profile\">\n      <img\n        src=\"../../assets/imgX/google-logo.png\"\n        alt=\"\"\n        class=\"google-logo img-fluid me-2\"\n      />\n      Accedi con google\n    </button>\n  </form>\n  <div class=\"iscrizione text-center mt-3\">\n    <p>Non hai un account? <a href=\"#\">Iscriviti</a></p>\n  </div>\n</section>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}